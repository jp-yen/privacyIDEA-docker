# === PrivacyIDEA Docker 環境変数設定ファイル（テンプレート） ===
#
# 使用方法:
#   1. このファイルを .env にコピー: cp .env.example .env
#   2. すべての "change_this_*" 値を安全な値に変更
#   3. make init-certs でシークレットキーを生成（推奨）

# 環境変数での動的制御:
#   PI_AUDIT_KEY_PRIVATE: /data/persistent/private.pem
#   PI_AUDIT_KEY_PUBLIC: /data/persistent/public.pem
#   PI_ENCKEY: 未設定時は /data/enckey から自動読み込み
#   PI_LOGLEVEL: ログレベルの動的制御
#                10:Debug, 20:Info, 30:Warning, 40:Error, 50:Critical

# DB_PASSWORD : cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 32 | head -n 1
# PI_ADMIN_PASS : cat /dev/urandom | tr -dc 'a-zA-Z0-9$!%' | fold -w 16 | head -n 1

# === PrivacyIDEA 環境変数設定（公式対応） ===
# 参考: https://github.com/gpappsoft/privacyidea-docker/blob/main/entrypoint.py
# 参考: https://github.com/gpappsoft/privacyidea-docker/blob/main/environment/application-dev.env

# === デバッグモード制御 ===
# Flask デバッグモード（false=本番/true=開発）
FLASK_DEBUG=false

# デバッグモードの有効/無効を制御（true/false）
DEBUG_MODE=false
# FreeRADIUSデバッグモード（true/false）
FREERADIUS_DEBUG=false

# RADIUS連携設定
RADIUS_PI_HOST=https://privacyidea

# PrivacyIDEA バージョン
# PI_VERSION=3.11.3

# === データベース接続設定（PostgreSQL & PrivacyIDEA共通） ===
DB_API=postgresql
DB_HOST=postgres
DB_PORT=5432
DB_NAME=privacyidea
DB_USER=pi
DB_PASSWORD=change_this_secure_database_password
DB_EXTRA_PARAMS=

# === 暗号化設定（重要：本番環境では必ず変更） ===
# アプリケーション暗号化鍵
# 生成方法 : cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 32 | head -n 1
PI_SECRET=change_this_to_secure_32_byte_hex_key_for_app_encryption

# パスワードハッシュ用ソルト
# 生成方法 : cat /dev/urandom | tr -dc 'a-zA-Z0-9' | fold -w 32 | head -n 1
PI_PEPPER=change_this_to_secure_16_byte_hex_key_for_password_salt

# PI_ENCKEY: 未設定時は /data/enckey から自動読み込み

# === 監査ログ設定 ===
PI_AUDIT_NO_SIGN=False
PI_AUDIT_KEY_PRIVATE=/data/certs/private.pem
PI_AUDIT_KEY_PUBLIC=/data/certs/public.pem
PI_AUDIT_SQL_TRUNCATE=True
PI_AUDIT_POOL_SIZE=20

# === セキュリティ設定 ===
SUPERUSER_REALM=admin,helpdesk
PI_REGISTRY_CLASS=shared

# === HTTP/HTTPS設定 ===
PI_PREFERRED_URL_SCHEME=http
PI_SESSION_COOKIE_SECURE=False
PI_SESSION_COOKIE_HTTPONLY=True

# === 管理者設定 ===
PI_ADMIN=PiAdmin
PI_ADMIN_PASS=change_this_secure_admin_password
PI_PASSWORD=change_this_secure_pi_password
PI_ADDRESS=0.0.0.0
PI_PORT=8080

# === ログ設定 ===
# PI_LOGLEVEL は環境変数で制御可能
# 10:Debug, 20:Info, 30:Warning, 40:Error, 50:Critical
PI_LOGLEVEL=20

# === 監査ログ署名鍵（RSA必須） ===
# generate_cert.sh により自動生成済み
# 署名アルゴリズム: RSA-SHA256（PrivacyIDEAはECDSA非対応）

# === 運用上の注意点 ===
# 1. PI_SECRET、PI_PEPPER の変更時は既存の暗号化データが復号不可
# 2. 監査ログ署名鍵の変更時は過去ログの検証が不可
# 3. データベースパスワード変更時は PostgreSQL 側も同期が必要
# 4. 証明書更新時は generate_cert.sh を再実行

# === FreeRADIUS - privacyIDEA 連携設定 ===
# gpappsoft/privacyidea-freeradius コンテナ用環境変数
# 参考: https://github.com/gpappsoft/privacyidea-freeradius

# privacyIDEA API エンドポイント (必須)
RADIUS_PI_HOST=http://privacyidea:8080
# デフォルトレルム・リゾルバ（オプション）
RADIUS_PI_REALM=

# デフォルトリゾルバ (オプション) 
RADIUS_PI_RESCONF=

# SSL証明書検証 (false=無効, true=有効)
RADIUS_PI_SSLCHECK=false

# privacyIDEA APIへのリクエストタイムアウト (秒)
RADIUS_PI_TIMEOUT=10
